apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: blue
  template:
    metadata:
      name: blue-dp
      labels:
        app: blue
    spec:
      containers:
      - name: blue
        image: benadabankah/kofi_html_website:v1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: blue
spec:
  selector:
    app: blue
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: green-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: green
  template:
    metadata:
      name: green-dp
      labels:
        app: green
    spec:
      containers:
      - name: green
        image: benadabankah/kofi_html_website:v2
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: green
spec:
  selector:
    app: green
  ports:
  - port: 80
    targetPort: 80


---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mavenwebapp
spec:
  replicas: 3
  selector:
    matchLabels:
       app: mavenwebapp
  template:
    metadata:
      name: mavenwebappod
      labels:
        app: mavenwebapp
    spec:
      containers:
      - name: mavenwebappcontainer
        image: benadabankah/m-web-app
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /maven-web-application
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /maven-web-application
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 15 


---
# Node Port Service
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mavenwebapp
  name: mavenwebapp
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: mavenwebapp

---
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: mongodb-configmap 
data:
  db-username: devdb
  db-hostname: mongodb
  db-password: devdb@123
---
# echo -n devdb@123 | base64
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
stringData:
  db-password: ZGV2ZGJAMTIz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: benadabankah/spring-boot-mongo
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: db-username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: db-password
        - name: MONGO_DB_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: db-hostname

---
apiVersion: v1
kind: Service
metadata:
  name: springapp
spec:
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
     metadata:
       name: mongodbpod
       labels:
         app: mongodb
     spec:
       volumes:
         - name:  hostpath-vol
           hostPath:
             path:  /tmp/data
       containers:
       - name: mongodbcontainer
         image: mongo
         ports:
         - containerPort: 27017
         env:
         - name: MONGO_INITDB_ROOT_USERNAME
           valueFrom:
             configMapKeyRef:
               name: mongodb-configmap
               key: db-username
         - name: MONGO_INITDB_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: mongodb-secret
               key: db-password
         volumeMounts:
         - name: hostpath-vol
           mountPath: /data/db   
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
