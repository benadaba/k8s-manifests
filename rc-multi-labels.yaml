#kams
apiVersion: v1
kind: ReplicationController # defines the kind of kubernetes object
metadata:
  name: nginx-rc # name you give to the replication controller
spec:       # defines the desired state of the controller
  replicas: 1  # specifies how many of the desired Pod replicas
  selector:     # tells which Pods (template) that the controller has to manage.
    app: dp-website-label

  template: ## pod definition 
    metadata:
      name: dp-website-name
      labels:
        app: dp-website-label
    spec:
      containers:
      - name: dp-website
        image: benadabankah/kofi_html_website:v1
        ports:
        - containerPort: 80
        #
---
# kams
apiVersion: v1
kind: Service 
metadata:
  name: nginx-rc-svc
spec: 
  type: NodePort
  selector:
    app: dp-website-label
  ports:
    - protocol: TCP
      port: 80 #service's own port which the services uses to broadcast the information to the world
      targetPort: 80 # containers port . this is the port that the container ( inside the pod) reveals its information
      nodePort: 31000 # nodeport range 30000 -> 32767

---
apiVersion: v1
kind: Service 
metadata:
  name: nginx-rc-svc
spec: 
  type: LoadBalancer
  selector:
    app: dp-website-label
  ports:
    - protocol: TCP
      port: 80 #service's own port which the services uses to broadcast the information to the world
      targetPort: 80 # containers port . this is the port that the container ( inside the pod) reveals its information

---
#kams a new set of rc
apiVersion: v1
kind: ReplicationController # defines the kind of kubernetes object
metadata:
  name: nginx-rc-multi-labels-all # name you give to the replication controller
spec:       # defines the desired state of the controller
  replicas: 1  # specifies how many of the desired Pod replicas
  selector:     # tells which Pods (template) that the controller has to manage. equality based
    app: dp-website-label-ml-all
    purpose: production
    to-be-tested: ok
    dept: devops

  template: ## pod definition 
    metadata:
      name: dp-website-name-ml-all
      labels:
        app: dp-website-label-ml-all
        purpose: production
        to-be-tested: ok
        dept: devops
    spec:
      containers:
      - name: dp-website
        image: benadabankah/kofi_html_website:v1
        ports:
        - containerPort: 80
        #
---
# kams a new set of rc
apiVersion: v1
kind: Service 
metadata:
  name: nginx-rc-svc-multi-all-2
spec: 
  type: NodePort
  selector:
    dept: devops
    app: dp-website-label-ml-all
    purpose: production
    to-be-tested: ok
  ports:
    - protocol: TCP
      port: 80 #service's own port which the services uses to broadcast the information to the world
      targetPort: 80 # containers port . this is the port that the container ( inside the pod) reveals its information
      nodePort: 31100 # nodeport range 30000 -> 32767

---
apiVersion: v1
kind: Service 
metadata:
  name: nginx-rc-svc
spec: 
  type: LoadBalancer
  selector:
    app: dp-website-label
  ports:
    - protocol: TCP
      port: 80 #service's own port which the services uses to broadcast the information to the world
      targetPort: 80 # containers port . this is the port that the container ( inside the pod) reveals its information
